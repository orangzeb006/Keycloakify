{"version":3,"file":"static/js/2807.0223b2cc.chunk.js","mappings":"qLA6BA,IACA,EAAe,IAA0B,yD,2hJCtBnCA,EAAc,iCACdC,EAAgB,cAChBC,EAAkB,UAEjBC,GAAkCC,EAAAA,EAAAA,iBAAgB,CACrDC,UAAU,GAADC,OAAKN,EAAW,YAAAM,OAAWL,GACpCM,SAAUL,EAEVM,iBAAkB,iBAAO,CAKrB,WAAc,KACd,gBAAmB,yCACtB,EACDC,UAAWC,GACXC,qBAAsBC,EAAAA,EAAAA,OAAS,CAK3BC,IAAKD,EAAAA,EAAAA,SACLE,KAAMF,EAAAA,EAAAA,SACNG,mBAAoBH,EAAAA,EAAAA,SAIpBI,aAAcJ,EAAAA,EAAAA,MAAQ,CAACA,EAAAA,EAAAA,QAAU,OAAQA,EAAAA,EAAAA,QAAU,OAAQA,EAAAA,EAAAA,QAAU,cAxB9DK,EAAYd,EAAZc,aAAcC,EAAOf,EAAPe,QA6BtB,SAASC,EACZC,GAIA,IAAQC,EAAWD,EAAXC,OAEFC,EAAa,IAAIC,IAAI,GAADjB,OAAIN,EAAW,YAAAM,OAAWL,EAAa,aAE3DuB,EAAe,IAAIC,gBAQzB,OANAD,EAAaE,OAAO,YAAaL,GACjCG,EAAaE,OAAO,WAAYxB,GAChCsB,EAAaE,OAAO,eAAgBC,OAAOC,SAASC,MAEpDP,EAAWQ,OAASN,EAAaO,WAE1BT,EAAWS,UACtB,C,aCvCA,SAASC,IAEL,IAAAC,EAAsDf,IAA9CgB,EAAcD,EAAdC,eAAgBC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OAAQC,EAAUJ,EAAVI,WAEvC,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,aAAYC,SAAA,CACzBN,GAEOO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EAEIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,SAAOH,EAAWM,eAAe7B,KAAK,SAC1CwB,EAAAA,EAAAA,KAAA,KACIT,KAAMV,EAAsB,CAAEE,OAAQ,OAAQmB,SACjD,mCAGDF,EAAAA,EAAAA,KAAA,UACIM,QAAS,kBAAMR,EAAO,CAAES,WAAY,QAAS,EAACL,SACjD,YAGDF,EAAAA,EAAAA,KAACQ,EAAG,QAKRR,EAAAA,EAAAA,KAAA,UACIM,QAAS,kBAAMT,EAAM,CACjBY,6BAA6B,GAE/B,EAACP,SACN,WAKTF,EAAAA,EAAAA,KAAA,OAAKU,IAAKC,EAAMV,UAAU,WAAWW,IAAI,UACzCZ,EAAAA,EAAAA,KAAA,OAAKU,IAAKG,EAAOD,IAAI,gBACrBZ,EAAAA,EAAAA,KAAA,KAAGc,MAAO,CAAE,WAAc,eAAgBZ,SAAC,iBAC3CC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,wCAAoCF,EAAAA,EAAAA,KAAA,KAAGT,KAAK,oCAAmCW,SAAC,cAAa,QAChGC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,8DAA0DF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mCAKnF,CAEA,SAASM,IAEL,IAAQT,EAAenB,EAAQ,CAC3BmC,oBAAoB,IADhBhB,WAOR,OACIC,EAAAA,EAAAA,KAAA,OAAKc,MAAO,CAAEE,UAAW,QAASd,SAC7Be,KAAKC,UAAUnB,EAAWM,eAAgB,KAAM,IAI7D,CChFA,MDEe,WACX,OAQIL,EAAAA,EAAAA,KAACrB,EAAY,CAAAuB,UACTF,EAAAA,EAAAA,KAACN,EAAiB,KAG9B,C","sources":["App/logo.svg","App/oidc.ts","App/App.tsx","App/index.ts"],"sourcesContent":["var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6ce24c58023cc2f8fd88fe9d219db6c6.svg\";\nexport { ForwardRef as ReactComponent };","// See documentation of oidc-spa for more details:\n// https://docs.oidc-spa.dev\n\nimport { createReactOidc } from \"oidc-spa/react\";\nimport { z } from \"zod\";\n\n//On older Keycloak version you need the /auth (e.g: http://localhost:8080/auth)\n//On newer version you must remove it (e.g: http://localhost:8080 )\nconst keycloakUrl = \"https://auth.code.gouv.fr/auth\";\nconst keycloakRealm = \"keycloakify\";\nconst keycloakClientId= \"starter\";\n\nexport const { OidcProvider, useOidc } = createReactOidc({\n    issuerUri: `${keycloakUrl}/realms/${keycloakRealm}`,\n    clientId: keycloakClientId,\n    // NOTE: You can also pass queries params when calling login()\n    extraQueryParams: () => ({\n        // This adding ui_locales to the url will ensure the consistency of the language between the app and the login pages\n        // If your app implements a i18n system (like i18nifty.dev for example) you should use this and replace \"en\" by the \n        // current language of the app.\n        // On the other side you will find kcContext.locale.currentLanguageTag to be whatever you set here.  \n        \"ui_locales\": \"en\",\n        \"my_custom_param\": \"value of foo transferred to login page\"\n    }),\n    publicUrl: process.env.PUBLIC_URL,\n    decodedIdTokenSchema: z.object({\n        // Use https://jwt.io/ to tell what's in your idToken\n        // It will depend of your Keycloak configuration.\n        // Here I declare only two field on the type but actually there are\n        // Many more things available. \n        sub: z.string(),\n        name: z.string(),\n        preferred_username: z.string(),\n        // This is a custom attribute set up in our Keycloak configuration\n        // it's not present by default. \n        // See https://docs.keycloakify.dev/realtime-input-validation#getting-your-custom-user-attribute-to-be-included-in-the-jwt\n        favorite_pet: z.union([z.literal(\"cat\"), z.literal(\"dog\"), z.literal(\"bird\")])\n    })\n});\n\n\nexport function getKeycloakAccountUrl(\n    params: {\n        locale: string;\n    }\n){\n    const { locale } = params;\n\n    const accountUrl = new URL(`${keycloakUrl}/realms/${keycloakRealm}/account`);\n\n    const searchParams = new URLSearchParams();\n\n    searchParams.append(\"kc_locale\", locale);\n    searchParams.append(\"referrer\", keycloakClientId);\n    searchParams.append(\"referrer_uri\", window.location.href);\n\n    accountUrl.search = searchParams.toString();\n\n    return accountUrl.toString();\n}","import \"./App.css\";\nimport logo from \"./logo.svg\";\nimport myimg from \"./myimg.png\";\nimport { OidcProvider, useOidc, getKeycloakAccountUrl } from \"./oidc\";\n\nexport default function App() {\n    return (\n        // To integrate Keycloak to your React App you have many options such as:  \n        // - https://www.npmjs.com/package/keycloak-js  \n        // - https://github.com/authts/oidc-client-ts\n        // - https://github.com/authts/react-oidc-context  \n        // In this starter we use oidc-spa instead\n        // It's a new library made by us, the Keycloakify team.  \n        // Check it out: https://github.com/keycloakify/oidc-spa\n        <OidcProvider>\n            <ContextualizedApp />\n        </OidcProvider>\n    );\n}\n\nfunction ContextualizedApp() {\n\n    const { isUserLoggedIn, login, logout, oidcTokens } = useOidc();\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {isUserLoggedIn ?\n                    (\n                        <>\n\n                            <h1>Hello {oidcTokens.decodedIdToken.name} !</h1>\n                            <a\n                                href={getKeycloakAccountUrl({ locale: \"en\" })}\n                            >\n                                Link to your Keycloak account\n                            </a>\n                            <button\n                                onClick={() => logout({ redirectTo: \"home\" })}\n                            >\n                                Logout\n                            </button>\n                            <Jwt />\n                        </>\n                    )\n                    :\n                    (\n                        <button\n                            onClick={() => login({\n                                doesCurrentHrefRequiresAuth: false,\n                                //extraQueryParams: { kc_idp_hint: \"google\" }\n                            })}\n                        >\n                            Login\n                        </button>\n                    )\n                }\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <img src={myimg} alt=\"test_image\" />\n                <p style={{ \"fontFamily\": '\"Work Sans\"' }}>Hello world</p>\n                <p>Check out all keycloak pages in the <a href=\"https://storybook.keycloakify.dev\">Storybook</a>!</p>\n                <p>Once you've identified the ones you want to customize run <code>npx eject-keycloak-page</code></p>\n            </header>\n        </div>\n    );\n\n}\n\nfunction Jwt(){\n\n    const { oidcTokens } = useOidc({\n        assertUserLoggedIn: true\n    });\n\n    // NOTE: Use `Bearer ${oidcTokens.accessToken}` as the Authorization header to call your backend\n    // Here we just display the decoded id token\n\n    return (\n        <pre style={{ textAlign: \"left\" }}>\n            {JSON.stringify(oidcTokens.decodedIdToken, null, 2)}\n        </pre>\n    );\n\n}\n\n","import App from \"./App\";\nexport * from \"./App\";\n\nexport default App;\n"],"names":["keycloakUrl","keycloakRealm","keycloakClientId","_createReactOidc","createReactOidc","issuerUri","concat","clientId","extraQueryParams","publicUrl","process","decodedIdTokenSchema","z","sub","name","preferred_username","favorite_pet","OidcProvider","useOidc","getKeycloakAccountUrl","params","locale","accountUrl","URL","searchParams","URLSearchParams","append","window","location","href","search","toString","ContextualizedApp","_useOidc","isUserLoggedIn","login","logout","oidcTokens","_jsx","className","children","_jsxs","_Fragment","decodedIdToken","onClick","redirectTo","Jwt","doesCurrentHrefRequiresAuth","src","logo","alt","myimg","style","assertUserLoggedIn","textAlign","JSON","stringify"],"sourceRoot":""}